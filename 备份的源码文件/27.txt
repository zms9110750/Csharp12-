
1.MoreThen(2);//可以推断类型时，不需要写泛型参数
1.MoreThen<int, int>();//不能推断类型时需要写全泛型参数


interface IGetT<T>
{
	T Value { get; }
}
interface ICreat<T>
{
	static abstract T Creat();
}

class GetInt32 : IGetT<int>//为泛型参数填写具体类型
{
	public int Value => throw new NotImplementedException();
}

class GetT<T> : IGetT<T> where T : ICreat<T> //为泛型参数填写自己的泛型
{
	public T Value => T.Creat();//有泛型约束时，可以使用他的方法 
}

static class SortExtend
{
	public static bool MoreThen<T1, T2>(this T1 left, T2 right = default!) where T1 : struct, IComparable<T2> where T2 : struct//多个泛型约束
	{
		return left.CompareTo(right) > 0;
	}
}






