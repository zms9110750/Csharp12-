
Action<int> cw = Console.WriteLine;//给委托赋值时不要带括号
cw(12);//委托可以像方法一样执行

var cr = Console.ReadLine;//只有当没有方法重载时才能用var判断委托类型
cr += Console.ReadLine;//委托可以连接，称为多播委托

Console.WriteLine(cr());//多播委托只有最后一个方法的返回值能获取到。


var fun1 = int (int i) => { return i * i; };//匿名方法
Func<int, int> fun2 = i => i * i;//简写的匿名方法

Action? action = null;
for (int i = 0; i < 10; i++)
{
	int p = i;
	action += () =>//捕获变量
	{
		Console.WriteLine($"修改前，i:{i}\tp:{p}");
		p += 10;
		i += 10;
		Console.WriteLine($"修改后，i:{i}\tp:{p}");
	};
}
action?.Invoke();


delegate bool TryParse<T>(string s, out T resut);//委托是类型，和类同级
class Hello
{

	public event TryParse<int> parse = int.TryParse;
	public event Action<string> HelloEvent { add { value("hello"); } remove { } }
	public int Parse(string s)
	{
		HelloEvent += Console.WriteLine;//有逻辑的事件只能放在+=或-=前面
		return parse(s, out var t) ? t : 0;//只有在声明类中，无逻辑的事件才能当作委托使用
	}
}



