#region 类型匹配
object o1 = 1;
Console.WriteLine(o1 is int);
Console.WriteLine(o1 is float);
Console.WriteLine(o1 is double);
int i1 = 20;
Console.WriteLine(i1 is string);//int和string没有继承关系，编译器会提示永远不会成立。

#endregion
#region 关系匹配
int i2 = 20;
switch (i2)
{
	case >= 30:
		Console.WriteLine("超过30");
		break;

	case < 10:
		Console.WriteLine("没有10");
		break;

	case 20:
		Console.WriteLine("是20");
		break;

	default:
		Console.WriteLine("都不对");
		break;
}
#endregion
#region 逻辑匹配 
int i3 = "Hello" switch
{
	"apple" => 6,//是apple
	"red" or "blue" => 9,//red或blue都行
	not "one" and "tow" => 12,//不是one，并且是tow
	"c#" or not "java" => 15,//是c#，或者是任何不是java的东西
	not ("root" or "Android" or "Ios") => 21//既不是root，也不是Android，也不是Ios
};

//可空值类型拆分判断时必须分别判断null和基础类型
object? o2 = null;
_ = o2 is float?;
_ = o2 is float or int or null;
#endregion
#region 属性匹配 
bool b1 = "Hello" is { Length: > 4 };
Console.WriteLine(b1);

string? s1 = null;
_ = s1 is { };
_ = s1 is not null;

object o = 1..^1;
switch (o)
{
	case Range { Start: { Value: 0 }, End.IsFromEnd: false }:
		break;

	case int and > 2:
		break;

	case string { Length: 0 }:
		break;

	default:
		break;
}
#endregion
#region 列表匹配
object[] arr1 = new object[4];
_ = arr1 switch
{
	[_, _, _, _, _] => 5,//使用弃元放弃对元素判断，只要求恰好包含5个元素
	[0, _, 20, _] => 4,//要求有4个元素，且第一个和第三个是0和20.
	[string { Length: 0 }] => 0,//要求有1个元素，且对这个元素进行模式匹配
	[2, .., 5] => 2,//要求至少有2个元素，首尾分别是2和5。中间可以有任意的元素
	[] => 3,//要求没有元素
	null => 1//是null
};
#endregion
#region 解构
int hp = 100;
int maxHp = 200;
switch ((hp, maxHp))
{
	case ( > 100, > 100) when hp < maxHp / 1:
	case (_, > 300 and < 500):
	default:
		break;
}
#endregion

#region 类型声明
object o3 = 12;
if (o3 is int i4)
{
	Console.WriteLine(i4 * i4);
}
else if (o3 is string s3)
{
	Console.WriteLine(s3.Length);
}

(int x, int y) point = (8, 4);
var p = point switch
{
	(var x, var y) when x > y => 1,
	(var x, var y) when x < y => -1,
	(_, _) => 0
};
#endregion
#region 范围声明
int[] arr2 = [3, 4, 5, 6, 7];
if (arr2 is [_, 4, .. var arr3, _])
{
	Console.WriteLine(arr3.Length);
}
#endregion