#region 声明和调用方法
//声明一个方法
using System;

void Hello1()
{
	for (int i = 0; i < 10; i++)
	{
		Console.WriteLine("Hello");
	}
}

//调用方法
Hello1();

#endregion


#region 方法的作用域

void Int1()
{
	int i1 = 10;//这个变量只能在Int1内部访问
	void Int2()//这个方法只能在Int1内部访问
	{
		int i2 = i1;//允许访问
	}
}
Int2();//无法访问，超出作用域
i1 = 5;//无法访问，超出作用域
#endregion

#region 方法的返回值
string String1()
{
	var i = Random.Shared.Next(100);
	return $"{i * i}";
}

string s1 = "随机数是" + String1();
#endregion

#region 方法的流程控制

void Random1()
{
	while (true)
	{
		int i = Random.Shared.Next(100);
		Console.WriteLine("随机数是" + i);
		if (i < 5)
		{
			return;
		}
	}
}


int Int3()
{
	int i = 0;
	while (i < 100)
	{
		i++;
		return i;
	}
	return i;//尽管你认为这个方法必然会从上面的循环中返回。
			 //但对编译器来说那个循环可能完全不会执行。
			 //必须要在方法结束的地方另外写一个返回语句。
}
#endregion